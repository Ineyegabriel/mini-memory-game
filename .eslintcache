[{"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/App.js":"1","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Game.js":"2","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/index.js":"3","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/reportWebVitals.js":"4","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Card.js":"5","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/MemoryGame.js":"6","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/store.js":"7","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/Reducers/GameReducer.js":"8","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Header.js":"9","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/Actions/GameAction.js":"10","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/root-reducer.js":"11","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Utils/helper.js":"12","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/ActionType.js":"13","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/initialState.js":"14","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/HomePage.js":"15","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/ScorePage.js":"16"},{"size":1021,"mtime":1612110967171,"results":"17","hashOfConfig":"18"},{"size":1281,"mtime":1612131532824,"results":"19","hashOfConfig":"18"},{"size":719,"mtime":1612103602076,"results":"20","hashOfConfig":"18"},{"size":362,"mtime":1611866033824,"results":"21","hashOfConfig":"18"},{"size":1936,"mtime":1612045416560,"results":"22","hashOfConfig":"18"},{"size":1244,"mtime":1612134476909,"results":"23","hashOfConfig":"18"},{"size":472,"mtime":1611966010672,"results":"24","hashOfConfig":"18"},{"size":604,"mtime":1612134064966,"results":"25","hashOfConfig":"18"},{"size":1189,"mtime":1612174414035,"results":"26","hashOfConfig":"18"},{"size":389,"mtime":1612133863396,"results":"27","hashOfConfig":"18"},{"size":149,"mtime":1611948132567,"results":"28","hashOfConfig":"18"},{"size":4131,"mtime":1612174292746,"results":"29","hashOfConfig":"18"},{"size":206,"mtime":1612133756878,"results":"30","hashOfConfig":"18"},{"size":113,"mtime":1612134033444,"results":"31","hashOfConfig":"18"},{"size":1110,"mtime":1612109858898,"results":"32","hashOfConfig":"18"},{"size":2947,"mtime":1612174593304,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t8059i",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/App.js",["68","69"],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Game.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/index.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/reportWebVitals.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Card.js",["70"],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/MemoryGame.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/store.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/Reducers/GameReducer.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Components/Header.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/Actions/GameAction.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/root-reducer.js",[],["71","72"],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Utils/helper.js",["73"],"import { useState, useEffect } from \"react\";\n\n/**\n * custom Hook that handles the operation of the memory game operation such as\n * ensuring two cards are flipped, calculating the score, setting new high score\n * setting the colors, shuffling the colors and displaying appropriate cards\n * @param {props} - props from the calling components\n * @param {objects} - props from components\n * @returns {objects} - exposes the functions and their value from the useState Hook \n */\nexport function useGame({\n  options,\n  setHighScore,\n  setOptions,\n  highScore,\n  username,\n}) {\n  const [game, setGame] = useState([]);\n  const [flippedCount, setFlippedCount] = useState(0);\n  const [flippedIndexes, setFlippedIndexes] = useState([]);\n  const [count, setCount] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const colors = [\n    \"#ecdb54\",\n    \"#e34132\",\n    \"#6ca0dc\",\n    \"#944743\",\n    \"#dbb2d1\",\n    \"#ec9787\",\n    \"#00a68c\",\n    \"#645394\",\n    \"#6c4f3d\",\n    \"#ebe1df\",\n    \"#bc6ca7\",\n    \"#bfd833\",\n  ];\n\n  useEffect(() => {\n    const newGame = [];\n    for (let i = 0; i < options / 2; i++) {\n      const firstOption = {\n        id: 2 * i,\n        colorId: i,\n        color: colors[i],\n        flipped: false,\n      };\n      const secondOption = {\n        id: 2 * i + 1,\n        colorId: i,\n        color: colors[i],\n        flipped: false,\n      };\n\n      newGame.push(firstOption);\n      newGame.push(secondOption);\n    }\n\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\n    setGame(shuffledGame);\n  }, [options]);\n\n  useEffect(() => {\n    const finished = !game.some((card) => !card.flipped);\n    if (finished && game.length > 0) {\n      setTimeout(() => {\n        const bestPossible = game.length;\n        let multiplier;\n\n        if (options === 12) {\n          multiplier = 5;\n        } else if (options === 18) {\n          multiplier = 2.5;\n        } else if (options === 24) {\n          multiplier = 1;\n        }\n\n        const pointsLost = multiplier * (0.66 * flippedCount - bestPossible);\n\n        let score;\n        if (pointsLost < 100) {\n          score = 100 - pointsLost;\n        } else {\n          score = 1;\n        }\n        setCount(score);\n\n        if (score > highScore.score) {\n          const data = {\n            username,\n            score,\n          };\n          setHighScore(data);\n        }\n      }, 500);\n    }\n  }, [\n    game,\n    highScore.score,\n    count,\n    flippedCount,\n    username,\n    options,\n    setHighScore,\n  ]);\n\n \n  /**\n   * This conditional statement is what ensures that two cards are flipped,\n   * aimming to pair them\n   * \n   */\n  if (flippedIndexes.length === 2) {\n    const match =\n      game[flippedIndexes[0]].colorId === game[flippedIndexes[1]].colorId;\n\n    if (match) {\n      const newGame = [...game];\n      newGame[flippedIndexes[0]].flipped = true;\n      newGame[flippedIndexes[1]].flipped = true;\n      setGame(newGame);\n\n      const newIndexes = [...flippedIndexes];\n      newIndexes.push(false);\n      setFlippedIndexes(newIndexes);\n    } else {\n      const newIndexes = [...flippedIndexes];\n      newIndexes.push(true);\n      setFlippedIndexes(newIndexes);\n    }\n  }\n  return {\n    game,\n    flippedCount,\n    setFlippedCount,\n    flippedIndexes,\n    setFlippedIndexes,\n    count,\n  };\n}\n\n/**\n * custom Hook utilizing the browser localstorage to manage the highscores with its\n * appropriate username\n * @param {string} username \n * @returns {Array} - containing the state storage and setStorage\n * @returns {object} - initiate state\n * @returns {object} - fetchStorage object from browser with the key\n */\nexport const useGetHighScore = (username) => {\n  const get = () => {\n    const initialState = {\n      username,\n      score: 0,\n    };\n    let fetchStorage = localStorage.getItem(\"React-MemoryGame-highscore\");\n    if (fetchStorage) {\n      return JSON.parse(fetchStorage);\n    }\n    return initialState;\n  };\n\n  const [storage, setStorage] = useState(get());\n  useEffect(() => {\n    localStorage.setItem(\"React-MemoryGame-highscore\", JSON.stringify(storage));\n  }, [storage]);\n  return [storage, setStorage];\n};\n","/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/ActionType.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Redux/initialState.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/HomePage.js",[],"/Library/WebServer/Documents/javascript/coding-challenges/mini-memory-game/src/Pages/ScorePage.js",[],{"ruleId":"74","severity":1,"message":"75","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"78","line":3,"column":37,"nodeType":"76","messageId":"77","endLine":3,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":31,"column":6,"nodeType":"81","endLine":31,"endColumn":22,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":61,"column":6,"nodeType":"81","endLine":61,"endColumn":15,"suggestions":"88"},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flippedCount', 'id', 'setFlippedCount', and 'setFlippedIndexes'. Either include them or remove the dependency array. If 'setFlippedCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["89"],"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.",["92"],{"desc":"93","fix":"94"},"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",{"range":"97","text":"98"},"Update the dependencies array to be: [colors, options]",{"range":"99","text":"100"},[869,885],"[flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",[1550,1559],"[colors, options]"]